#TrieStruct

	Trie se sastoji od klase koja predstavlja cvor I klase koja predtsavlja trie.
-U klasi za cvor se nalaze atributi:
1.children – recnik koji predstavlja decu cvora I u koji ubacujemo karaktere 2.isEndOfWord
– postavlja se na true ukoliko cvor predstavlja zavrsetak reci,I drugi parameter predstavlja ukupan broj pojavljivanja te reci
3.links – recnik ciji su kljucevi absolutne putanje linkova u kojima se rec pojavljuje a vrednosti su brojevi pojavljivanja reci u tim linkovima.
Tu se nalazi I klasa IntoSet koja prebacuje recnik links u set.
- U klasi Trie imamo funkciju za dodavanje reci u graf koja dodaje karakter po karakter u 
cvorove I kad dodje do kraja reci postavlja vrednost isEndOfWord na true I ubacuje linkove u krajnji cvor.
Tu je I funkcija za pretragu preko koje pristupamo cvoru u kojem se nalazai poslednji karakter reci koju trazimo.

#ParsiranjeSkupaHtmlDokumenata

	Unosimo direktorijum koji zelimo da parsiramo,zatim prolazimo kroz taj direktorijum I parsiramo html dokumente,
  nakon parsiranja ubacujemo reci u trie,a linkove u graf.

#ParserUpita

	Tu se nalazi klasa ParsirajU u kojoj unosimo upit za pretragu,vrsimo pretragu pojedinacnih reci I kombinujemo sa osnovnim skupovnim operacijama .
  Unosimo upit za pretragu,zatim splitujemo reci I smestamo ih u promenljivoj delovi.Prolazimo kroz delove,ukoliko je deo tj rec logicki operator na 
  odgovarajuce mesto u listu rez ubacujemo bas taj logicki operator,ukoliko rec ne postoji u trie ubacujemo prazan set u rez,a ako rec postoji u trie 
  ubacujemo set sa linkovima u kojima se javlja ta rec u listu rez.
	Zatim prolazimo kroz listu rez I vrsimo operacije unije,preseka ili komplementa po potrebi I krajnji rezultat pretrage smestamo u set s,koji je povratna
  vrednost Klase ParsirajU.
  
#NapredniParser
     U ovom fajlu je odredjena gramatika, odnosno pravila po kojima se unosi slozeni upit, ali i realizovana je manipulacija sa skupovima (unija, presek, komplement)
     u zavisnosti od unesenog slozenog upita.  Za resenje ovog dela zadatka koristili smo ovaj link : http://www.igordejanovic.net/parglare/stable/

#Graf
	Graf se sastoji od recnika cvorova, dok cvor sadrzi link, ulazne linkove (linkove koji pokazuju na taj link ), izlazne linkove (linkove na koje taj link pokazuje),
	rang stranice koji zavisi od broja linkova koji pokazuju na taj cvor, kao i broja linkova koji pokazuju na te cvorove. 
	
# Rangirana pretraga

	Rang html stranice sastoji se od 
	1. Broj pojavljivanja trazenih reci na njoj 
	2. Broj linkova iz drugih stranica na pronadjenu stranicu (rang koji se nalazi u samom cvoru i kreira se odmah nakon popunjavanja grafa )
	3. Broj trazenih reci u stranicama koje sadrze link na trazenu stranicu
	4. Broj pojavljivanja razlicitih reci  iz upita u html stranici 
	Rang html stranice se formira modifikacijom i kombinovanjem utcaja navedenih faktora.
	Algoritam za rang:
	Vrednost ranga maksimalno moze da varira za 1, inicijano prestavlja broj razlicitih reci iz upita koje se pojavljuju na linku uvecan za jedan.
	Od ovog ranga se oduzima uticaj nabrojanih faktora koji su skalirani u zavisnosti od vaznosti.
	Na ovaj nacin je obezbedjeno da prednost imaju linkovi sa vecim brojem razlicitih reci iz upita, ali i da na svaki rang uticu i svi navedeni faktori.
	
#Prikaz rezultata

	Za sortitanje rezultata koristen je merge algoritam.
	
# Paginacija rezultata

	Paginacija rezultata je odradjena tako sto je definisan inicijalni broj linkova na jednoj stranici, i na sammom pocetku se prikazuje prva stranica  
  na kojoj se nalazi taj broj, ili manje od tog broja linkova.Korisnik ima mogucnost da izabere
  1. pregleda prethodne stranice - prikazuje se stranica pre prikazane ukoliko postoji
  2. pregled naredne stranice  - prikazuje se naredna stranica ukoliko postoji
  3. izmena broja linkova koji se prikazuju (inicijalno je 10)
  4. izbor stranice na koju zelite direktno otici - unosi se broj stranice i prikazuje se izabrana stranica
  5. izborom opcije 5 prikazuju se prethodne opcije (izmena direktorijuma, jednostavni ili napredni upit ili izlazak iz programa)

# Set
	Set je realizovan kao rjecnik koja ima funkcije za dodavanje elementa ,uniju, presek, komplement…Unija ,presek
  i komplement se pozivaju nad objektom tipa set i primaju objekat tipa set.
